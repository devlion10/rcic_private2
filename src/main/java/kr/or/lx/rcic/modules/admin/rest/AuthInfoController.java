/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-rcic:src/main/java/controller/Controller.e.vm.java
 */
package kr.or.lx.rcic.modules.admin.rest;

import kr.or.lx.rcic.frmwrk.util.SimpleData;
import kr.or.lx.rcic.frmwrk.web.BaseController;
import kr.or.lx.rcic.modules.user.entity.AuthInfo;
import kr.or.lx.rcic.modules.user.service.AuthInfoService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.util.Map;

/**
 *  권한코드 정보를 관리한다.
 */
@Controller
@Slf4j
@RequestMapping("/rcic")
public class AuthInfoController extends BaseController {

    @Autowired
    private AuthInfoService authInfoService;

    // api

    /**
     * 단건 조회
     */
    @RequestMapping("/authInfo/getAuthInfo")
    @ResponseBody
    public AuthInfo getAuthInfo(HttpServletRequest request, @RequestParam Map params) throws Exception {
        SimpleData simpleData = getSimpleData(request);
        AuthInfo authInfo = authInfoService.getAuthInfo(simpleData);
        return authInfo;
    }

    /**
     * 목록 조회
     */
    @RequestMapping("/authInfo/getAuthInfoList")
    @ResponseBody
    public Map<String, Object> getAuthInfoList(HttpServletRequest request) throws Exception {
        return authInfoService.getAuthInfoList(request);
    }

    /**
     * 등록
     */
    @PostMapping("/authInfo/insertAuthInfo")
    @ResponseBody
    public int insertAuthInfo(HttpServletRequest request, @RequestBody AuthInfo authInfo) throws Exception {
        return authInfoService.saveAuthInfo(authInfo);
    }

    /**
     * 수정
     */
    @PostMapping("/authInfo/updateAuthInfo")
    @ResponseBody
    public int updateAuthInfo(HttpServletRequest request, @RequestBody AuthInfo authInfo) throws Exception {
        return authInfoService.saveAuthInfo(authInfo);
    }

    /**
     * 동적 수정
     */
    @PostMapping("/authInfo/patchAuthInfo")
    @ResponseBody
    public int patchAuthInfo(HttpServletRequest request, @RequestBody AuthInfo authInfo) throws Exception {
        return authInfoService.saveAuthInfo(authInfo);
    }

    /**
     * 삭제
     */
    @PostMapping("/authInfo/deleteAuthInfo")
    @ResponseBody
    public int deleteAuthInfo(HttpServletRequest request, @RequestBody AuthInfo authInfo) throws Exception {
        return authInfoService.deleteAuthInfo(authInfo);
    }

}
