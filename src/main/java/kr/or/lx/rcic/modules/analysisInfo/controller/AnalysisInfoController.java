/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-rcic:src/main/java/controller/Controller.e.vm.java
 */
package kr.or.lx.rcic.modules.analysisInfo.controller;

import kr.or.lx.rcic.frmwrk.util.SimpleData;
import kr.or.lx.rcic.frmwrk.web.BaseController;
import kr.or.lx.rcic.modules.analysisInfo.entity.AnalysisInfo;
import kr.or.lx.rcic.modules.analysisInfo.service.AnalysisInfoFileService;
import kr.or.lx.rcic.modules.analysisInfo.service.AnalysisInfoService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import java.io.File;
import java.util.Map;

/**
 *  수집된 입찰정보에서 도로변경정보로 예측된  정보를 관리한다.  */
@Controller
@Slf4j
@RequestMapping("/rcic")
public class AnalysisInfoController extends BaseController {

    @Autowired
    private AnalysisInfoService analysisInfoService;

    @Resource(name="analysisInfoCsvService")
    private AnalysisInfoFileService analysisInfoFileService;

    // api

    /**
     * 단건 조회
     */
    @RequestMapping("/analysisInfo/getAnalysisInfo")
    @ResponseBody
    public AnalysisInfo getAnalysisInfo(HttpServletRequest request, @RequestParam Map params) throws Exception {
        SimpleData simpleData = getSimpleData(request);
        log.debug("simpleData: {}", simpleData);
        return analysisInfoService.getAnalysisInfo(simpleData);
    }

    /**
     * 목록 조회
     */
    @RequestMapping("/analysisInfo/getAnalysisInfoList")
    @ResponseBody
    public Map<String, Object> getAnalysisInfoList(HttpServletRequest request) throws Exception {
        return analysisInfoService.getAnalysisInfoList(request);
    }

    /**
     * 등록
     */
    @PostMapping("/analysisInfo/insertAnalysisInfo")
    @ResponseBody
    public int insertAnalysisInfo(HttpServletRequest request, @RequestBody AnalysisInfo analysisInfo) throws Exception {
        return analysisInfoService.saveAnalysisInfo(analysisInfo);
    }

    /**
     * 수정
     */
    @PostMapping("/analysisInfo/updateAnalysisInfo")
    @ResponseBody
    public int updateAnalysisInfo(HttpServletRequest request, @RequestBody AnalysisInfo analysisInfo) throws Exception {
        return analysisInfoService.saveAnalysisInfo(analysisInfo);
    }

    /**
     * 동적 수정
     */
    @PostMapping("/analysisInfo/patchAnalysisInfo")
    @ResponseBody
    public int patchAnalysisInfo(HttpServletRequest request, @RequestBody AnalysisInfo analysisInfo) throws Exception {
        return analysisInfoService.saveAnalysisInfo(analysisInfo);
    }
    
    
    /**
     * 도로대장 관리시스템 갱신일자 수정
     */
    @PostMapping("/analysisInfo/updateAnalysisInfoKrris")
    @ResponseBody
    public int updateAnalysisInfoKrris(HttpServletRequest request) throws Exception {
        return analysisInfoService.updateAnalysisInfoKrris(getSimpleData(request));
    }
    

    /**
     * 삭제
     */
    @PostMapping("/analysisInfo/deleteAnalysisInfo")
    @ResponseBody
    public int deleteAnalysisInfo(HttpServletRequest request, @RequestBody AnalysisInfo analysisInfo) throws Exception {
        return analysisInfoService.deleteAnalysisInfo(analysisInfo);
    }


    /**
     * 삭제
     */
    @GetMapping("/analysisInfo/createAnalysisInfoFile")
    @ResponseBody
    public String generateExcelFile(@RequestParam Map<String, Object> param) throws Exception {
        File file =  analysisInfoFileService.generateExcel(param, (String)param.get("filePath"), (String)param.get("fileName"));
        return file.getAbsolutePath();
    }
}
