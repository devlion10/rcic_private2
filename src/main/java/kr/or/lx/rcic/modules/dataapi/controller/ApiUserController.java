/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-rcic:src/main/java/controller/Controller.e.vm.java
 */
package kr.or.lx.rcic.modules.dataapi.controller;

import kr.or.lx.rcic.frmwrk.util.SimpleData;
import kr.or.lx.rcic.frmwrk.util.WebUtil;
import kr.or.lx.rcic.frmwrk.web.BaseController;
import kr.or.lx.rcic.modules.dataapi.entity.ApiUser;
import kr.or.lx.rcic.modules.dataapi.service.ApiUserService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.util.HashMap;
import java.util.Map;

/**
 *  API로 데이터를 제공받는 사용자정보를 관리한다.  */
@Controller
@Slf4j
@RequestMapping("/rcic")
public class ApiUserController extends BaseController {

    @Autowired
    private ApiUserService apiUserService;

    // api

    /**
     * 단건 조회
     */
    @RequestMapping("/apiUser/getApiUser")
    @ResponseBody
    public ApiUser getApiUser(HttpServletRequest request, @RequestParam Map params) throws Exception {
        SimpleData simpleData = getSimpleData(request);
        return apiUserService.getApiUser(simpleData);
    }

    /**
     * 목록 조회
     */
    @RequestMapping("/apiUser/getApiUserList")
    @ResponseBody
    public Map<String, Object> getApiUserList(HttpServletRequest request) throws Exception {
        Map param = WebUtil.getCommonAjaxParam(5, false);
        return apiUserService.getApiUserList(param);
    }

    /**
     * 등록
     */
    @PostMapping("/apiUser/insertApiUser")
    @ResponseBody
    public HashMap<String, Object> insertApiUser(HttpServletRequest request) throws Exception {
        return apiUserService.insertApiUser(request);
    }

    /**
     * 수정
     */
    @PostMapping("/apiUser/updateApiUser")
    @ResponseBody
    public int updateApiUser(HttpServletRequest request, @RequestBody ApiUser apiUser) throws Exception {
        return apiUserService.saveApiUser(apiUser);
    }

 

    /**
     * 삭제
     */
    @PostMapping("/apiUser/deleteApiUser")
    @ResponseBody
    public int deleteApiUser(HttpServletRequest request, @RequestBody ApiUser apiUser) throws Exception {
        return apiUserService.deleteApiUser(apiUser);
    }
    
   

}
