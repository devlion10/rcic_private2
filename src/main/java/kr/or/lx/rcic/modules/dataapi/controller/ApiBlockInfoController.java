/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-rcic:src/main/java/controller/Controller.e.vm.java
 */
package kr.or.lx.rcic.modules.dataapi.controller;

import kr.or.lx.rcic.frmwrk.util.SimpleData;
import kr.or.lx.rcic.frmwrk.util.WebUtil;
import kr.or.lx.rcic.frmwrk.web.BaseController;
import kr.or.lx.rcic.modules.dataapi.entity.ApiBlockInfo;
import kr.or.lx.rcic.modules.dataapi.service.ApiBlockInfoService;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import javax.servlet.http.HttpServletRequest;
import java.util.Map;

/**
 *  API 사용자의 차단정보를 관리한다.  */
@Controller
@Slf4j
@RequestMapping("/rcic")
public class ApiBlockInfoController extends BaseController {

    @Autowired
    private ApiBlockInfoService apiBlockInfoService;

    // api

    /**
     * 단건 조회
     */
    @RequestMapping("/apiBlockInfo/getApiBlockInfo")
    @ResponseBody
    public ApiBlockInfo getApiBlockInfo(HttpServletRequest request, @RequestParam Map params) throws Exception {
        SimpleData simpleData = getSimpleData(request);
        return apiBlockInfoService.getApiBlockInfo(simpleData);
    }

    /**
     * 목록 조회
     */
    @RequestMapping("/apiBlockInfo/getApiBlockInfoList")
    @ResponseBody
    public Map<String, Object> getApiBlockInfoList(HttpServletRequest request) throws Exception {
        Map param = WebUtil.getCommonAjaxParam();
        return apiBlockInfoService.getApiBlockInfoList(param);
    }

    /**
     * 등록
     */
    @PostMapping("/apiBlockInfo/insertApiBlockInfo")
    @ResponseBody
    public int insertApiBlockInfo(HttpServletRequest request, @RequestBody ApiBlockInfo apiBlockInfo) throws Exception {
        return apiBlockInfoService.saveApiBlockInfo(apiBlockInfo);
    }

    /**
     * 수정
     */
    @PostMapping("/apiBlockInfo/updateApiBlockInfo")
    @ResponseBody
    public int updateApiBlockInfo(HttpServletRequest request, @RequestBody ApiBlockInfo apiBlockInfo) throws Exception {
        return apiBlockInfoService.saveApiBlockInfo(apiBlockInfo);
    }

    /**
     * 동적 수정
     */
    @PostMapping("/apiBlockInfo/patchApiBlockInfo")
    @ResponseBody
    public int patchApiBlockInfo(HttpServletRequest request, @RequestBody ApiBlockInfo apiBlockInfo) throws Exception {
        return apiBlockInfoService.saveApiBlockInfo(apiBlockInfo);
    }

    /**
     * 삭제
     */
    @PostMapping("/apiBlockInfo/deleteApiBlockInfo")
    @ResponseBody
    public int deleteApiBlockInfo(HttpServletRequest request, @RequestBody ApiBlockInfo apiBlockInfo) throws Exception {
        return apiBlockInfoService.deleteApiBlockInfo(apiBlockInfo);
    }

}
