/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-rcic:src/main/java/controller/Controller.e.vm.java
 */
package kr.or.lx.rcic.modules.snsAccountInfo.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.lx.rcic.frmwrk.util.SimpleData;
import kr.or.lx.rcic.frmwrk.web.BaseController;
import kr.or.lx.rcic.modules.snsAccountInfo.entity.SnsAccountInfo;
import kr.or.lx.rcic.modules.snsAccountInfo.service.SnsAccountInfoService;

import lombok.extern.slf4j.Slf4j;

/**
 *  수집대상이 되는 SNS 트위터 계정정보를 관리한다.  */
@Controller
@Slf4j
@RequestMapping("/rcic")
public class SnsAccountInfoController extends BaseController {

    @Autowired
    private SnsAccountInfoService snsAccountInfoService;

    // api

    /**
     * 단건 조회
     */
    @RequestMapping("/snsAccountInfo/getSnsAccountInfo")
    @ResponseBody
    public SnsAccountInfo getSnsAccountInfo(HttpServletRequest request, @RequestParam Map params) throws Exception {
        SimpleData simpleData = getSimpleData(request);
        log.debug("simpleData: {}", simpleData);
        return snsAccountInfoService.getSnsAccountInfo(simpleData);
    }

    /**
     * 목록 조회
     */
    @RequestMapping("/snsAccountInfo/getSnsAccountInfoList")
    @ResponseBody
    public Map<String, Object> getSnsAccountInfoList(HttpServletRequest request) throws Exception {
        return snsAccountInfoService.getSnsAccountInfoList(request);
    }

    /**
     * 등록
     */
    @PostMapping("/snsAccountInfo/insertSnsAccountInfo")
    @ResponseBody
    public int insertSnsAccountInfo(HttpServletRequest request, @RequestBody SnsAccountInfo snsAccountInfo) throws Exception {
        return snsAccountInfoService.saveSnsAccountInfo(snsAccountInfo);
    }

    /**
     * 수정
     */
    @PostMapping("/snsAccountInfo/updateSnsAccountInfo")
    @ResponseBody
    public int updateSnsAccountInfo(HttpServletRequest request, @RequestBody SnsAccountInfo snsAccountInfo) throws Exception {
        return snsAccountInfoService.saveSnsAccountInfo(snsAccountInfo);
    }

    /**
     * 동적 수정
     */
    @PostMapping("/snsAccountInfo/patchSnsAccountInfo")
    @ResponseBody
    public int patchSnsAccountInfo(HttpServletRequest request, @RequestBody SnsAccountInfo snsAccountInfo) throws Exception {
        return snsAccountInfoService.saveSnsAccountInfo(snsAccountInfo);
    }

    /**
     * 삭제
     */
    @PostMapping("/snsAccountInfo/deleteSnsAccountInfo")
    @ResponseBody
    public int deleteSnsAccountInfo(HttpServletRequest request, @RequestBody SnsAccountInfo snsAccountInfo) throws Exception {
        return snsAccountInfoService.deleteSnsAccountInfo(snsAccountInfo);
    }

    /**
    * 사용여부 변경
    * useYn 컬럼을 업데이트 한다.
    */
    @PostMapping("/snsAccountInfo/changeUseYnSnsAccountInfo")
    @ResponseBody
    public int changeUseYnSnsAccountInfo(HttpServletRequest request, @RequestBody SnsAccountInfo snsAccountInfo) throws Exception {
        return snsAccountInfoService.changeUseYnSnsAccountInfo(snsAccountInfo);
    }
}
