/*
 * Source code generated by Celerio, a Jaxio product.
 * Documentation: http://www.jaxio.com/documentation/celerio/
 * Follow us on twitter: @jaxiosoft
 * Need commercial support ? Contact us: info@jaxio.com
 * Template pack-rcic:src/main/java/service/impl/ServiceImpl.e.vm.java
 */
package kr.or.lx.rcic.modules.userMyStats.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import kr.or.lx.rcic.egovframework.cmmn.util.EgovMessageSource;
import kr.or.lx.rcic.frmwrk.user.User;
import kr.or.lx.rcic.frmwrk.util.CmmnUtil;
import kr.or.lx.rcic.frmwrk.util.SimpleData;
import kr.or.lx.rcic.modules.userMyStats.entity.UserMyStats;
import kr.or.lx.rcic.modules.userMyStats.mapper.UserMyStatsMapper;
import kr.or.lx.rcic.modules.userMyStats.service.UserMyStatsService;
import lombok.extern.slf4j.Slf4j;
import net.sf.json.JSONArray;

/**
 *  업무사용자의 나의 통계목록 관리한다.  */
@Service
@Slf4j
public class UserMyStatsServiceImpl implements UserMyStatsService {

    @Autowired
    private UserMyStatsMapper userMyStatsMapper;

    @Resource(name = "egovMessageSource")
    EgovMessageSource egovMessageSource;

    /**
     * 단건 조회
     */
    @Override
    public UserMyStats getUserMyStats(Map<String, Object> params) throws Exception {
        log.debug("params: {}", params.toString()); // log 사용
        return userMyStatsMapper.getUserMyStats(params);
    }

    /**
     * 목록 조회
     */
    @Override
    public Map<String, Object> getUserMyStatsList(HttpServletRequest request) throws Exception {

        HashMap<String, Object> resultMap = new HashMap<String, Object>();
        HashMap<String, Object> retMap = new HashMap<String, Object>();
        resultMap.put("message", "success");
        String strParamList = CmmnUtil.deXss(CmmnUtil.checkNull(request.getParameter("paramList"), ""));
        if (strParamList.equals("")) {
            retMap.put("message", "failure");
            retMap.put("result", egovMessageSource.getMessage("_REQUIRED_MSG_REPEAT"));
            return retMap;
        }

        JSONArray paramList = JSONArray.fromObject(strParamList);
        HashMap<String, Object> param = new HashMap<String, Object>();
        param = CmmnUtil.convertJsonToObject(CmmnUtil.checkNull(paramList.getJSONObject(0), ""));

        User user = (User) SecurityContextHolder.getContext().getAuthentication().getPrincipal(); //로그인 사용자 정보 조회
        param.put("registId", user.getUserid());
        param.put("userSeq", user.getUserNo());

        int cnt = userMyStatsMapper.selectUserMyStatsCnt(param);
        List<Map<String, Object>> list = userMyStatsMapper.selectUserMyStatsList(param);

        resultMap.put("list", list);
        resultMap.put("totalCnt", cnt);

        return resultMap;
    }

    /**
     * 등록
     */
    @Override
    @Transactional
    public int insertUserMyStats(SimpleData simpleData) throws Exception {
    	int collectionCnt = 0;
    	int corporationCnt = 0;
    	int rstCnt = 0;
    	User user = (User) SecurityContextHolder.getContext().getAuthentication().getPrincipal(); //로그인 사용자 정보 조회
	   	simpleData.put("registId", user.getUserid());
	   	simpleData.put("userSeq", user.getUserNo());
	   	String[] corporationArr = String.valueOf(simpleData.get("corporationStr")).split(",");
	   	String[] collectionArr = String.valueOf(simpleData.get("collectionStr")).split(",");
        
	   	userMyStatsMapper.deleteUserMyStats(simpleData);
	   	for (int i = 0; i < corporationArr.length; i++) {
	   		if(corporationArr[i].trim().equals("")) continue;
	   		simpleData.put("statsListSe", "2");
	   		simpleData.put("statsChrtSe", corporationArr[i]);
	   		corporationCnt = userMyStatsMapper.insertUserMyStats(simpleData);
	   		rstCnt = rstCnt+corporationCnt;
		}
	   	
 	   	for (int i = 0; i < collectionArr.length; i++) {
	   		if(collectionArr[i].trim().equals("")) continue;
	   		simpleData.put("statsListSe", "1");
	   		simpleData.put("statsChrtSe", collectionArr[i]);
	   		userMyStatsMapper.insertUserMyStats(simpleData);
	   		rstCnt = rstCnt+collectionCnt;
			
		}
	   	
        return rstCnt;
    }

    /**
     * 수정
     */
    @Override
    @Transactional
    public int updateUserMyStats(UserMyStats userMyStats) throws Exception {
        return userMyStatsMapper.updateUserMyStats(userMyStats);
    }

    /**
     * 삭제
     */
    @Override
    @Transactional
    public int deleteUserMyStats(SimpleData simpleData) throws Exception {
        return userMyStatsMapper.deleteUserMyStats(simpleData);
    }


}
