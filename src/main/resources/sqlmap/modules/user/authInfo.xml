<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by Celerio, a Jaxio product.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! Need commercial support ? Contact us: info@jaxio.com
 ! Template pack-rcic:src/main/resources/sqlmap/modules/SqlMap.e.vm.xml
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.lx.rcic.modules.user.mapper.AuthInfoMapper">

    <resultMap id="authInfoResultMap" type="kr.or.lx.rcic.modules.user.entity.AuthInfo">
        <!-- 권한번호 -->
        <result property="id" column="auth_no"/>
        <!-- 권한명 -->
        <result property="authNm" column="auth_nm"/>
        <!-- 상태코드 -->
        <result property="sttus" column="sttus"/>
        <!-- 등록일시 -->
        <result property="registDt" column="regist_dt"/>
        <!-- 수정일시 -->
        <result property="updtDt" column="updt_dt"/>
    </resultMap>

    <sql id="whereConditions">
        <where>
            <include refid="conditions" />
        </where>
    </sql>

    <sql id="conditions">
        <if test="id != null">
            AND auth_no = #{id}
        </if>
        <if test="authNm != null and authNm != ''">
            AND auth_nm = #{authNm}
        </if>
        <if test="sttus != null and sttus != ''">
            AND sttus = #{sttus}
        </if>
        <if test="registDt != null and registDt.enabled == true">

            <if test="registDtEq != null and registDtEq != ''">
            AND regist_dt = STR_TO_DATE(#{registDtEq}, '%Y.%m.%d')
            </if>


            <if test="registDtFrom != null and registDtFrom != ''">
            AND regist_dt <![CDATA[ >= ]]> STR_TO_DATE(#{registDtFrom}, '%Y.%m.%d')
            </if>

            <if test="registDtTo != null and registDtTo != ''">
            AND regist_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{registDtTo}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="updtDt != null and updtDt.enabled == true">

            <if test="updtDtEq != null and updtDtEq != ''">
            AND updt_dt = STR_TO_DATE(#{updtDtEq}, '%Y.%m.%d')
            </if>


            <if test="updtDtFrom != null and updtDtFrom != ''">
            AND updt_dt <![CDATA[ >= ]]> STR_TO_DATE(#{updtDtFrom}, '%Y.%m.%d')
            </if>

            <if test="updtDtTo != null and updtDtTo != ''">
            AND updt_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{updtDtTo}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
    </sql>

    <select id="getAuthInfo" resultMap="authInfoResultMap">
        /* kr.or.lx.rcic.modules.authInfo.mapper.AuthInfoMapper.getAuthInfo */

        SELECT
            auth_no, auth_nm, sttus, regist_dt, updt_dt
        FROM tb_auth_info
        WHERE
         auth_no = #{id}
	</select>

    <select id="selectAuthInfoCnt" resultType="int">
        /* kr.or.lx.rcic.modules.user.mapper.AuthInfoMapper.selectAuthInfoCnt */

        SELECT COUNT(*)
        FROM tb_auth_info  ai
        <include refid="whereConditions" />
    </select>


    <select id="selectAuthInfoList" resultType="egovMap">
        /* kr.or.lx.rcic.modules.user.mapper.AuthInfoMapper.selectAuthInfoList */

        <include refid="common.headerRow"/>
        SELECT ai.auth_no
             , ai.auth_nm
             , ai.sttus
             , to_char(ai.regist_dt, 'YYYY.MM.DD') AS regist_dt
             , to_char(ai.updt_dt, 'YYYY.MM.DD') AS updt_dt
             , ai.regist_id
             , ai.updt_id
             , c.use_cnt
        FROM tb_auth_info ai
          JOIN (
              SELECT a1.auth_no, count(a2.auth_no) AS use_cnt
              FROM tb_auth_info a1
                LEFT JOIN tb_user a2 ON a1.auth_no = a2.auth_no
              GROUP BY a1.auth_no
          ) c ON ai.auth_no = c.auth_no
        <include refid="whereConditions" />
        ORDER BY ai.auth_no DESC
        <include refid="common.footerRow"/>
	</select>

    <update id="updateAuthInfo" parameterType="kr.or.lx.rcic.modules.user.entity.AuthInfo">
        /* kr.or.lx.rcic.modules.authInfo.mapper.AuthInfoMapper.updateAuthInfo */

        UPDATE tb_auth_info
        SET
               auth_nm = #{authNm}
                    , sttus = #{sttus}
                      , updt_dt = NOW()
              WHERE
             auth_no = #{id}
    </update>

    <update id="updateAuthInfoDynamic" parameterType="kr.or.lx.rcic.modules.user.entity.AuthInfo">
        /* kr.or.lx.rcic.modules.user.mapper.AuthInfoMapper.updateAuthInfoDynamic */

        UPDATE tb_auth_info
        <set>
            <if test="authNm != null and authNm != ''">
                auth_nm = #{authNm},
            </if>
            <if test="sttus != null and sttus != ''">
                sttus = #{sttus},
            </if>
            <if test="registDt != null">
                regist_dt = #{registDt},
            </if>
            <if test="updtDt != null">
                updt_dt = NOW(),
            </if>
            <if test="updtId != null and updtId != ''">
                updt_id = #{updtId},
            </if>
        </set>
        WHERE
             auth_no = #{id}
    </update>

    <delete id="deleteAuthInfo" parameterType="kr.or.lx.rcic.modules.user.entity.AuthInfo">
        /* kr.or.lx.rcic.modules.authInfo.mapper.AuthInfoMapper.deleteAuthInfo */

        DELETE FROM tb_auth_info
        WHERE
             auth_no = #{id}
    </delete>

    <insert id="insertAuthInfo">
        /* kr.or.lx.rcic.modules.authInfo.mapper.AuthInfoMapper.insertAuthInfo */

        INSERT INTO tb_auth_info (
            auth_no
          , auth_nm
          , sttus
          , regist_dt
          , updt_dt
          , regist_id
          , updt_id
        ) VALUES (
            nextval('rcic.seq_tb_auth_info')
          , #{authNm}
          , #{sttus}
          , NOW()
          , NOW()
          , #{registId}
          , #{registId}
        )
	</insert>

    <select id="existAuthNm" resultType="boolean">
        /* kr.or.lx.rcic.modules.authInfo.mapper.AuthInfoMapper.existAuthNm */

        SELECT case when count(*) > 0 THEN true ELSE false END
        FROM tb_auth_info
        WHERE auth_nm = #{authNm}
    </select>

</mapper>

