<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by Celerio, a Jaxio product.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! Need commercial support ? Contact us: info@jaxio.com
 ! Template pack-rcic:src/main/resources/sqlmap/modules/SqlMap.e.vm.xml
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.lx.rcic.modules.user.mapper.AuthDtlMapper">

    <resultMap id="authDtlResultMap" type="kr.or.lx.rcic.modules.user.entity.AuthDtl">
        <!-- 권한상세번호 -->
        <result property="id" column="auth_dtl_no"/>
        <!-- 권한번호 -->
        <result property="authNo" column="auth_no"/>
        <!-- 메뉴번호 -->
        <result property="menuNo" column="menu_no"/>
        <!-- 권한상세구분 -->
        <result property="authDtlSe" column="auth_dtl_se"/>
        <!-- 권한상세내용 -->
        <result property="authDtlCn" column="auth_dtl_cn"/>
        <!-- 등록일시 -->
        <result property="registDt" column="regist_dt"/>
        <!-- 수정일시 -->
        <result property="updtDt" column="updt_dt"/>
    </resultMap>

    <sql id="whereConditions">
        <where>
            <include refid="conditions" />
        </where>
    </sql>

    <sql id="conditions">
        <if test="id != null">
            AND auth_dtl_no = #{id}
        </if>
        <if test="authNo != null">
            AND auth_no = #{authNo}
        </if>
        <if test="menuNo != null">
            AND menu_no = #{menuNo}
        </if>
        <if test="authDtlSe != null and authDtlSe != ''">
            AND auth_dtl_se = #{authDtlSe}
        </if>
        <if test="authDtlCn != null and authDtlCn != ''">
            AND auth_dtl_cn = #{authDtlCn}
        </if>
        <if test="registDt != null and registDt.enabled == true">
            
            <if test="registDtEq != null and registDtEq != ''">
            AND regist_dt = STR_TO_DATE(#{registDtEq}, '%Y.%m.%d')
            </if>

            
            <if test="registDtFrom != null and registDtFrom != ''">
            AND regist_dt <![CDATA[ >= ]]> STR_TO_DATE(#{registDtFrom}, '%Y.%m.%d')
            </if>

            <if test="registDtTo != null and registDtTo != ''">
            AND regist_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{registDtTo}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="updtDt != null and updtDt.enabled == true">
            
            <if test="updtDtEq != null and updtDtEq != ''">
            AND updt_dt = STR_TO_DATE(#{updtDtEq}, '%Y.%m.%d')
            </if>

            
            <if test="updtDtFrom != null and updtDtFrom != ''">
            AND updt_dt <![CDATA[ >= ]]> STR_TO_DATE(#{updtDtFrom}, '%Y.%m.%d')
            </if>

            <if test="updtDtTo != null and updtDtTo != ''">
            AND updt_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{updtDtTo}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
    </sql>

    <select id="getAuthDtl" resultMap="authDtlResultMap">
        /* kr.or.lx.rcic.modules.authDtl.mapper.AuthDtlMapper.getAuthDtl */

        SELECT
            auth_dtl_no, auth_no, menu_no, auth_dtl_se, auth_dtl_cn, regist_dt, updt_dt
        FROM tb_auth_dtl
        <where>
            <choose>
                <when test="id != null">
                    auth_dtl_no = #{id}
                </when>
                <otherwise>
                    AND auth_no = #{authNo}
                    AND menu_no = #{menuNo}
                </otherwise>
            </choose>
        </where>

	</select>

    <select id="selectAuthDtlCnt" resultType="int">
        /* kr.or.lx.rcic.modules.user.mapper.AuthDtlMapper.simpleListAuthDtlCnt */

        SELECT COUNT(*)
        FROM tb_auth_dtl
        <include refid="whereConditions" />
    </select>

    
    <select id="selectAuthDtlList" resultType="egovMap">
        /* kr.or.lx.rcic.modules.user.mapper.AuthDtlMapper.selectAuthDtlList */

        <include refid="common.headerRow"/>
        SELECT
            auth_dtl_no, auth_no, menu_no, auth_dtl_se, auth_dtl_cn, regist_dt, updt_dt
        FROM tb_auth_dtl
        <include refid="whereConditions" />
        <include refid="common.footerRow"/>
	</select>

    <update id="updateAuthDtl" parameterType="kr.or.lx.rcic.modules.user.entity.AuthDtl">
        /* kr.or.lx.rcic.modules.authDtl.mapper.AuthDtlMapper.updateAuthDtl */

        UPDATE tb_auth_dtl
        SET
               auth_no = #{authNo}
                    , menu_no = #{menuNo}
                    , auth_dtl_se = #{authDtlSe}
                    , auth_dtl_cn = #{authDtlCn}
                      , updt_dt = NOW()
              WHERE
             auth_dtl_no = #{id}
    </update>

    <update id="updateAuthDtlDynamic" parameterType="kr.or.lx.rcic.modules.user.entity.AuthDtl">
        /* kr.or.lx.rcic.modules.user.mapper.AuthDtlMapper.updateAuthDtlDynamic */

        UPDATE tb_auth_dtl
            <set>
            <if test="authNo != null">
                auth_no = #{authNo},
            </if>
            <if test="menuNo != null">
                menu_no = #{menuNo},
            </if>
            <if test="authDtlSe != null and authDtlSe != ''">
                auth_dtl_se = #{authDtlSe},
            </if>
            <if test="authDtlCn != null and authDtlCn != ''">
                auth_dtl_cn = #{authDtlCn},
            </if>
            <if test="registDt != null">
                regist_dt = #{registDt},
            </if>
            <if test="updtDt != null">
                updt_dt = NOW(),
            </if>
            </set>
        WHERE
             auth_dtl_no = #{id}
    </update>

    <delete id="deleteAuthDtl" parameterType="kr.or.lx.rcic.modules.user.entity.AuthDtl">
        /* kr.or.lx.rcic.modules.authDtl.mapper.AuthDtlMapper.deleteAuthDtl */

        DELETE FROM tb_auth_dtl
        WHERE
             auth_dtl_no = #{id}
    </delete>

    <insert id="insertAuthDtl">
        /* kr.or.lx.rcic.modules.authDtl.mapper.AuthDtlMapper.insertAuthDtl */
        INSERT INTO tb_auth_dtl
        (
        auth_dtl_no, auth_no, menu_no, auth_dtl_se, auth_dtl_cn, regist_dt, updt_dt
        )
        VALUES (
        nextval('rcic.seq_tb_auth_dtl'),
        #{authNo},
        #{menuNo},
        #{authDtlSe},
        #{authDtlCn},
        NOW(),
        NOW()
        )
	</insert>

    <select id="existAuthDtl" resultType="boolean">
        /* kr.or.lx.rcic.modules.authDtl.mapper.AuthDtlMapper.existAuthDtl */

        SELECT case when count(*) > 0 THEN true ELSE false END
        FROM tb_auth_dtl
        WHERE auth_no = #{authNo} AND menu_no = #{menuNo}
    </select>

</mapper>

