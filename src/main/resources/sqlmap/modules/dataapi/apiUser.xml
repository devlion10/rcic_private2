<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by Celerio, a Jaxio product.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! Need commercial support ? Contact us: info@jaxio.com
 ! Template pack-rcic:src/main/resources/sqlmap/modules/SqlMap.e.vm.xml
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.lx.rcic.modules.dataapi.mapper.ApiUserMapper">

    <resultMap id="apiUserResultMap" type="kr.or.lx.rcic.modules.dataapi.entity.ApiUser">
        <!-- API사용자번호 -->
        <result property="id" column="api_user_no"/>
        <!-- 사용자번호 -->
        <result property="userSeq" column="user_seq"/>
        <!-- 기관명 -->
        <result property="insttNm" column="instt_nm"/>
        <!-- 접속URL -->
        <result property="conectUrl" column="conect_url"/>
        <!-- API인증키 -->
        <result property="apiCrtfcKey" column="api_crtfc_key"/>
        <!-- 상태코드 -->
        <result property="sttus" column="sttus"/>
        <!-- 가입일자 -->
        <result property="srbde" column="srbde"/>
        <!-- 차단여부 -->
        <result property="blockAt" column="block_at"/>
        <!-- 본인인증CI -->
        <result property="authCi" column="auth_ci"/>
        <!-- 본인인증DI -->
        <result property="authDi" column="auth_di"/>
        <!-- 등록아이디 -->
        <result property="registId" column="regist_id"/>
        <!-- 등록일시 -->
        <result property="registDt" column="regist_dt"/>
        <!-- 수정아이디 -->
        <result property="updtId" column="updt_id"/>
        <!-- 수정일시 -->
        <result property="updtDt" column="updt_dt"/>
    </resultMap>

    <sql id="whereConditions">
        <where>
            <include refid="conditions" />
        </where>
    </sql>

    <sql id="conditions">
        <if test="id != null">
            AND api_user_no = #{id}
        </if>
        <if test="userSeq != null and userSeq != ''">
            AND user_seq = #{userSeq}
        </if>
        <if test="insttNm != null and insttNm != ''">
            AND instt_nm LIKE CONCAT('%',#{insttNm},'%')
        </if>
        <if test="conect_Url != null and conect_Url != ''">
            AND conect_url = #{conect_Url}
        </if>
        <if test="apiCrtfcKey != null and apiCrtfcKey != ''">
            AND api_crtfc_key = #{apiCrtfcKey}
        </if>
        <if test="sttus != null and sttus != ''">
            AND sttus = #{sttus}
        </if>
        <if test="srbde != null and srbde != ''">
            AND srbde = #{srbde}
        </if>
        <if test="blockAt != null and blockAt != ''">
            AND block_at = #{blockAt}
        </if>
        <if test="authCi != null and authCi != ''">
            AND auth_ci = #{authCi}
        </if>
        <if test="authDi != null and authDi != ''">
            AND auth_di = #{authDi}
        </if>
        <if test="registId != null and registId != ''">
            AND regist_id = #{registId}
        </if>
        <if test="registDt != null and registDt.enabled == true">
            
            <if test="registDtEq != null and registDtEq != ''">
            AND regist_dt = STR_TO_DATE(#{registDtEq}, '%Y.%m.%d')
            </if>
            
            <if test="registDtFrom != null and registDtFrom != ''">
            AND regist_dt <![CDATA[ >= ]]> STR_TO_DATE(#{registDtFrom}, '%Y.%m.%d')
            </if>

            <if test="registDtTo != null and registDtTo != ''">
            AND regist_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{registDtTo}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
        <if test="updtId != null and updtId != ''">
            AND updt_id = #{updtId}
        </if>
        <if test="updtDt != null and updtDt.enabled == true">
            
            <if test="updtDtEq != null and updtDtEq != ''">
            AND updt_dt = STR_TO_DATE(#{updtDtEq}, '%Y.%m.%d')
            </if>
            
            <if test="updtDtFrom != null and updtDtFrom != ''">
            AND updt_dt <![CDATA[ >= ]]> STR_TO_DATE(#{updtDtFrom}, '%Y.%m.%d')
            </if>

            <if test="updtDtTo != null and updtDtTo != ''">
            AND updt_dt <![CDATA[ < ]]> DATE_ADD(STR_TO_DATE(#{updtDtTo}, '%Y.%m.%d'), INTERVAL 1 DAY)
            </if>
        </if>
    </sql>

    <select id="getApiUser" resultMap="apiUserResultMap">
        /* kr.or.lx.rcic.modules.apiUser.mapper.ApiUserMapper.getApiUser */

        SELECT
            api_user_no, user_seq, instt_nm, conect_url, api_crtfc_key, sttus, srbde, block_at, auth_ci, auth_di, regist_id, regist_dt, updt_id, updt_dt
        FROM rcic.tb_api_user
        <include refid="whereConditions" />
	</select>

    <select id="selectApiUserCnt" resultType="int">
        /* kr.or.lx.rcic.modules.dataapi.mapper.ApiUserMapper.simpleListApiUserCnt */

        SELECT COUNT(*)
        FROM rcic.tb_api_user
        <include refid="whereConditions" />
    </select>

    
    <select id="selectApiUserList" resultType="egovMap">
        /* kr.or.lx.rcic.modules.dataapi.mapper.ApiUserMapper.selectApiUserList */

        <include refid="common.headerRow"/>
        SELECT
            API_USER_NO, 
            USER_SEQ, 
            INSTT_NM, 
            CONECT_URL, 
            API_CRTFC_KEY, 
            (SELECT CODE_NM FROM RCIC.TB_SYS_CMM_CODE_DTL WHERE GROUP_CODE = 'API_STTUS' AND CODE = STTUS ) as STTUS,
            SRBDE, 
            BLOCK_AT, 
            AUTH_CI, 
            AUTH_DI, 
            REGIST_ID, 
            REGIST_DT, 
            UPDT_ID, 
            UPDT_DT
        FROM RCIC.TB_API_USER
        <include refid="whereConditions" />
        ORDER BY srbde desc
        <include refid="common.footerRow"/>
	</select>

    <update id="updateApiUser" parameterType="kr.or.lx.rcic.modules.dataapi.entity.ApiUser">
        /* kr.or.lx.rcic.modules.apiUser.mapper.ApiUserMapper.updateApiUser */

        UPDATE rcic.tb_api_user
        SET
               instt_nm = #{insttNm}
                    , conect_url = #{conect_Url}
                    , api_crtfc_key = #{apiCrtfcKey}
                    , sttus = #{sttus}
                    , srbde = #{srbde}
                    , block_at = #{blockAt}
                    , auth_ci = #{authCi}
                    , auth_di = #{authDi}
                        , updt_id = #{updtId}
                    , updt_dt = NOW()
              WHERE
             api_user_no = #{id}
    </update>

    <update id="updateApiUserDynamic" parameterType="kr.or.lx.rcic.modules.dataapi.entity.ApiUser">
        /* kr.or.lx.rcic.modules.dataapi.mapper.ApiUserMapper.updateApiUserDynamic */

        UPDATE rcic.tb_api_user
            <set>
            <if test="insttNm != null and insttNm != ''">
                instt_nm = #{insttNm},
            </if>
            <if test="conectUrl != null and conectUrl != ''">
                conect_url = #{conect_Url},
            </if>
            <if test="apiCrtfcKey != null and apiCrtfcKey != ''">
                api_crtfc_key = #{apiCrtfcKey},
            </if>
            <if test="sttus != null and sttus != ''">
                sttus = #{sttus},
            </if>
            <if test="srbde != null and srbde != ''">
                srbde = #{srbde},
            </if>
            <if test="blockAt != null and blockAt != ''">
                block_at = #{blockAt},
            </if>
            <if test="authCi != null and authCi != ''">
                auth_ci = #{authCi},
            </if>
            <if test="authDi != null and authDi != ''">
                auth_di = #{authDi},
            </if>
            <if test="registId != null and registId != ''">
                regist_id = #{registId},
            </if>
            <if test="registDt != null">
                regist_dt = #{registDt},
            </if>
            <if test="updtId != null and updtId != ''">
                updt_id = #{updtId},
            </if>
            <if test="updtDt != null">
                updt_dt = NOW(),
            </if>
            </set>
        WHERE
             api_user_no = #{id}
    </update>

    <delete id="deleteApiUser" parameterType="kr.or.lx.rcic.modules.dataapi.entity.ApiUser">
        /* kr.or.lx.rcic.modules.apiUser.mapper.ApiUserMapper.deleteApiUser */

        DELETE FROM rcic.tb_api_user
        WHERE
             api_user_no = #{id}
    </delete>

    <insert id="insertApiUser">
        INSERT INTO RCIC.TB_API_USER
        (
        	API_USER_NO, 
        	USER_SEQ,
        	INSTT_NM, 
        	CONECT_URL, 
        	API_CRTFC_KEY, 
        	STTUS, 
        	BLOCK_AT,
        	SRBDE, 
        	REGIST_ID, 
        	REGIST_DT
        )
        VALUES (
         nextval('rcic.seq_tb_api_user'),
        #{userSeq},
        #{insttNm},
        #{conectUrl},
        #{apiCrtfcKey},
        '00',
        'N',
        #{srbde}, 
        #{registId},
        NOW()
        )
	</insert>

</mapper>

