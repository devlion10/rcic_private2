<?xml version="1.0" encoding="UTF-8"?>
<!--
 ! Source code generated by Celerio, a Jaxio product.
 ! Documentation: http://www.jaxio.com/documentation/celerio/
 ! Follow us on twitter: @jaxiosoft
 ! Need commercial support ? Contact us: info@jaxio.com
 ! Template pack-rcic:src/main/resources/sqlmap/modules/SqlMap.e.vm.xml
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper">

    <resultMap id="analysisInfoResultMap" type="kr.or.lx.rcic.modules.analysisInfo.entity.AnalysisInfo">
        <!-- 시퀀스 -->
        <result property="seq" column="seq"/>
        <!-- 수집키 -->
        <result property="resultno" column="resultno"/>
        <!-- 공사현장지역명 -->
        <result property="cnstrtsitergnnm" column="cnstrtsitergnnm"/>
        <!-- 입찰공고번호 -->
        <result property="bidntceno" column="bidntceno"/>
        <!-- 입찰공고차수 -->
        <result property="bidntceord" column="bidntceord"/>
        <!-- 공고종류명 -->
        <result property="ntcekindnm" column="ntcekindnm"/>
        <!-- 공고기관명 -->
        <result property="ntceinsttnm" column="ntceinsttnm"/>
        <!-- 입찰공고일시 -->
        <result property="bidntcedt" column="bidntcedt"/>
        <!-- 시도코드 -->
        <result property="sidoCd" column="sido_cd"/>
        <!-- 시군구코드 -->
        <result property="sggCd" column="sgg_cd"/>
        <!-- 읍면동코드 -->
        <result property="emdCd" column="emd_cd"/>
        <!-- 새주소 도로 -->
        <result property="roadCd" column="road_cd"/>
        <!-- poi cd -->
        <result property="poiCd" column="poi_cd"/>
        <!-- 연속지적 코드 -->
        <result property="cbndCd" column="cbnd_cd"/>
        <!-- 분석일시 -->
        <result property="analysisDt" column="analysis_dt"/>
        <!-- 분석1 -->
        <result property="analysis1" column="analysis_1"/>
        <!-- 분석2 -->
        <result property="analysis2" column="analysis_2"/>
        <!-- 분석3 -->
        <result property="analysis3" column="analysis_3"/>
        <!-- 분석4 -->
        <result property="analysis4" column="analysis_4"/>
        <!-- 공고명 -->
        <result property="bidntcenm" column="bidntcenm"/>
        <!-- 관련번호 -->
        <result property="refno" column="refno"/>
        <!-- 공고URL -->
        <result property="bidntcedtlurl" column="bidntcedtlurl"/>
        <!-- 분석요소 -->
        <result property="analysisType" column="analysis_type"/>
        <!-- 분석키워드 -->
        <result property="analysisWord" column="analysis_word"/>
        <!-- Geomety -->
        <result property="geom" column="geom"/>
        <!-- 표준노드링크 코드 -->
        <result property="moctCd" column="moct_cd"/>
        <!-- UPIS_코드 -->
        <result property="upisCd" column="upis_cd"/>
        <!-- 공사시작시기 -->
        <result property="anaysisStartDt" column="anaysis_start_dt"/>
        <!-- 공사완료시기 -->
        <result property="anaysisEndDt" column="anaysis_end_dt"/>
        <!-- 수집종료일 -->
        <result property="stdrDt" column="stdr_dt"/>
        <!-- 예측종료일 -->
        <result property="forecastEndDt" column="forecast_end_dt"/>
        <!-- 보정위치 -->
        <result property="newGeom" column="new_geom"/>
        <!-- krris 관리대상 UID 맵핑 -->
        <result property="refKrrisUid" column="ref_krris_uid"/>
        <!-- 개소 -->
        <result property="attr1" column="attr1"/>
        <!-- 계약종류 -->
        <result property="bidType" column="bid_type"/>
        
        <result property="attr2" column="attr2"/>
        <!-- 위치예측신뢰도코드 -->
        <result property="locPrdtReliCd" column="loc_prdt_reli_cd"/>
        <!-- KRRIS 갱신여부 -->
        <result property="krrisUpdYn" column="krris_upd_yn"/>
        <!-- KRRIS 갱신일자 -->
        <result property="krrisUpdDt" column="krris_upd_dt"/>
        <!-- 도로 종류 -->
        <result property="roadType" column="road_type"/>
    </resultMap>

    <sql id="whereConditions">
        <where>
            <include refid="conditions" />
        </where>
    </sql>

    <sql id="conditions">
        <if test="seq != null">
            AND seq = #{seq}
        </if>
        <if test="resultno != null">
            AND resultno = #{resultno}
        </if>
        <if test="cnstrtsitergnnm != null and cnstrtsitergnnm != ''">
            AND cnstrtsitergnnm = #{cnstrtsitergnnm}
        </if>
        <if test="bidntceno != null and bidntceno != ''">
            AND bidntceno = #{bidntceno}
        </if>
        <if test="bidntceord != null and bidntceord != ''">
            AND bidntceord = #{bidntceord}
        </if>
        <if test="ntcekindnm != null and ntcekindnm != ''">
            AND ntcekindnm = #{ntcekindnm}
        </if>
        <if test="ntceinsttnm != null and ntceinsttnm != ''">
            AND ntceinsttnm = #{ntceinsttnm}
        </if>
        <if test="bidntcedt != null and bidntcedt != ''">
            AND bidntcedt = #{bidntcedt}
        </if>
        <if test="sidoCd != null and sidoCd != ''">
            AND sido_cd = #{sidoCd}
        </if>
        <if test="sggCd != null and sggCd != ''">
            AND sgg_cd = #{sggCd}
        </if>
        <if test="emdCd != null and emdCd != ''">
            AND emd_cd = #{emdCd}
        </if>
        <if test="zoneCd != null and zoneCd != ''">
            AND zone_cd = #{zoneCd}
        </if>
        <if test="roadCd != null and roadCd != ''">
            AND road_cd = #{roadCd}
        </if>
        <if test="poiCd != null and poiCd != ''">
            AND poi_cd = #{poiCd}
        </if>
        <if test="cbndCd != null and cbndCd != ''">
            AND cbnd_cd = #{cbndCd}
        </if>
        <if test="analysisDt != null and analysisDt != ''">
            AND analysis_dt = #{analysisDt}
        </if>
        <if test="analysis1 != null and analysis1 != ''">
            AND analysis_1 = #{analysis1}
        </if>
        <if test="analysis2 != null and analysis2 != ''">
            AND analysis_2 = #{analysis2}
        </if>
        <if test="analysis3 != null and analysis3 != ''">
            AND analysis_3 = #{analysis3}
        </if>
        <if test="analysis4 != null and analysis4 != ''">
            AND analysis_4 = #{analysis4}
        </if>
        <if test="bidntcenm != null and bidntcenm != ''">
            AND bidntcenm = #{bidntcenm}
        </if>
        <if test="refno != null and refno != ''">
            AND refno = #{refno}
        </if>
        <if test="bidntcedtlurl != null and bidntcedtlurl != ''">
            AND bidntcedtlurl = #{bidntcedtlurl}
        </if>
        <if test="analysisType != null and analysisType != ''">
            AND analysis_type = #{analysisType}
        </if>
        <if test="analysisWord != null and analysisWord != ''">
            AND analysis_word = #{analysisWord}
        </if>
        <if test="geom != null and geom != ''">
            AND geom = #{geom}
        </if>
        <if test="moctCd != null and moctCd != ''">
            AND moct_cd = #{moctCd}
        </if>
        <if test="upisCd != null and upisCd != ''">
            AND upis_cd = #{upisCd}
        </if>
        <if test="anaysisStartDt != null and anaysisStartDt != ''">
            AND anaysis_start_dt = #{anaysisStartDt}
        </if>
        <if test="anaysisEndDt != null and anaysisEndDt != ''">
            AND anaysis_end_dt = #{anaysisEndDt}
        </if>
        <if test="stdrDt != null and stdrDt != ''">
            AND stdr_dt = #{stdrDt}
        </if>
        <if test="forecastEndDt != null and forecastEndDt != ''">
            AND forecast_end_dt = #{forecastEndDt}
        </if>
        <if test="newGeom != null">
            AND new_geom = #{newGeom}
        </if>
        <if test="refKrrisUid != null and refKrrisUid != ''">
            AND ref_krris_uid = #{refKrrisUid}
        </if>
        <if test="attr1 != null and attr1 != ''">
            AND attr1 = #{attr1}
        </if>
        <if test="bidType != null and bidType != ''">
            AND bid_type = #{bidType}
        </if>
        <if test="attr2 != null and attr2 != ''">
            AND attr2 = #{attr2}
        </if>
        <if test="locPrdtReliCd != null and locPrdtReliCd != ''">
            AND loc_prdt_reli_cd = #{locPrdtReliCd}
        </if>
        <if test="krrisUpdYn != null and krrisUpdYn != ''">
            AND krris_upd_yn = #{krrisUpdYn}
        </if>
        <if test="krrisUpdDt != null and krrisUpdDt != ''">
            AND krris_upd_dt = #{krrisUpdDt}
        </if>
        <if test="roadType != null and roadType != ''">
            AND road_type = #{roadType}
        </if>
    </sql>

    <select id="getAnalysisInfo" resultMap="analysisInfoResultMap">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.getAnalysisInfo */
        SELECT
            seq,
			resultno,
			krris_upd_yn,
			krris_upd_dt
        FROM rcic.tb_analysis_info
        WHERE
         seq = #{seq}::numeric
         AND  resultno = #{resultno}::numeric
	</select>

    <select id="selectAnalysisInfoCnt" resultType="int">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.simpleListAnalysisInfoCnt */

        SELECT COUNT(*)
        FROM rcic.tb_analysis_info
        <include refid="whereConditions" />
    </select>

    
    <select id="selectAnalysisInfoList" resultType="egovMap">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.selectAnalysisInfoList */

        <include refid="common.headerRow"/>
        SELECT
            seq, resultno, cnstrtsitergnnm, bidntceno, bidntceord, ntcekindnm, ntceinsttnm, bidntcedt, sido_cd, sgg_cd, emd_cd, zone_cd, road_cd, poi_cd, cbnd_cd, analysis_dt, analysis_1, analysis_2, analysis_3, analysis_4, bidntcenm, refno, bidntcedtlurl, analysis_type, analysis_word, geom, moct_cd, upis_cd, anaysis_start_dt, anaysis_end_dt, stdr_dt, forecast_end_dt, new_geom, ref_krris_uid, attr1, bid_type, attr2, loc_prdt_reli_cd, krris_upd_yn, krris_upd_dt, road_type
        FROM rcic.tb_analysis_info
        <include refid="whereConditions" />
        <include refid="common.footerRow"/>
	</select>

    <update id="updateAnalysisInfo" parameterType="kr.or.lx.rcic.modules.analysisInfo.entity.AnalysisInfo">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.updateAnalysisInfo */

        UPDATE rcic.tb_analysis_info
        SET
               cnstrtsitergnnm = #{cnstrtsitergnnm}
                    , bidntceno = #{bidntceno}
                    , bidntceord = #{bidntceord}
                    , ntcekindnm = #{ntcekindnm}
                    , ntceinsttnm = #{ntceinsttnm}
                    , bidntcedt = #{bidntcedt}
                    , sido_cd = #{sidoCd}
                    , sgg_cd = #{sggCd}
                    , emd_cd = #{emdCd}
                    , zone_cd = #{zoneCd}
                    , road_cd = #{roadCd}
                    , poi_cd = #{poiCd}
                    , cbnd_cd = #{cbndCd}
                    , analysis_dt = #{analysisDt}
                    , analysis_1 = #{analysis1}
                    , analysis_2 = #{analysis2}
                    , analysis_3 = #{analysis3}
                    , analysis_4 = #{analysis4}
                    , bidntcenm = #{bidntcenm}
                    , refno = #{refno}
                    , bidntcedtlurl = #{bidntcedtlurl}
                    , analysis_type = #{analysisType}
                    , analysis_word = #{analysisWord}
                    , geom = #{geom}
                    , moct_cd = #{moctCd}
                    , upis_cd = #{upisCd}
                    , anaysis_start_dt = #{anaysisStartDt}
                    , anaysis_end_dt = #{anaysisEndDt}
                    , stdr_dt = #{stdrDt}
                    , forecast_end_dt = #{forecastEndDt}
                    , new_geom = #{newGeom}
                    , ref_krris_uid = #{refKrrisUid}
                    , attr1 = #{attr1}
                    , bid_type = #{bidType}
                    , attr2 = #{attr2}
                    , loc_prdt_reli_cd = #{locPrdtReliCd}
                    , krris_upd_yn = #{krrisUpdYn}
                    , krris_upd_dt = #{krrisUpdDt}
                    , road_type = #{roadType}
              WHERE
             seq = #{seq}
             AND  resultno = #{resultno}
    </update>
    
    <update id="updateAnalysisInfoKrris" parameterType="map" >
    	 UPDATE rcic.tb_analysis_info
    	 <set>
    	 	<if test="krrisUpdYn != null and krrisUpdYn != ''">
                krris_upd_yn = #{krrisUpdYn},
            </if>
            <if test="krrisUpdDt != null and krrisUpdDt != ''">
                krris_upd_dt = #{krrisUpdDt},
            </if>
         </set>
        WHERE
             seq = #{seq}
             AND  resultno = #{resultno}
    </update>

    <update id="updateAnalysisInfoDynamic" parameterType="kr.or.lx.rcic.modules.analysisInfo.entity.AnalysisInfo">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.updateAnalysisInfoDynamic */

        UPDATE rcic.tb_analysis_info
            <set>
            <if test="cnstrtsitergnnm != null and cnstrtsitergnnm != ''">
                cnstrtsitergnnm = #{cnstrtsitergnnm},
            </if>
            <if test="bidntceno != null and bidntceno != ''">
                bidntceno = #{bidntceno},
            </if>
            <if test="bidntceord != null and bidntceord != ''">
                bidntceord = #{bidntceord},
            </if>
            <if test="ntcekindnm != null and ntcekindnm != ''">
                ntcekindnm = #{ntcekindnm},
            </if>
            <if test="ntceinsttnm != null and ntceinsttnm != ''">
                ntceinsttnm = #{ntceinsttnm},
            </if>
            <if test="bidntcedt != null and bidntcedt != ''">
                bidntcedt = #{bidntcedt},
            </if>
            <if test="sidoCd != null and sidoCd != ''">
                sido_cd = #{sidoCd},
            </if>
            <if test="sggCd != null and sggCd != ''">
                sgg_cd = #{sggCd},
            </if>
            <if test="emdCd != null and emdCd != ''">
                emd_cd = #{emdCd},
            </if>
            <if test="zoneCd != null and zoneCd != ''">
                zone_cd = #{zoneCd},
            </if>
            <if test="roadCd != null and roadCd != ''">
                road_cd = #{roadCd},
            </if>
            <if test="poiCd != null and poiCd != ''">
                poi_cd = #{poiCd},
            </if>
            <if test="cbndCd != null and cbndCd != ''">
                cbnd_cd = #{cbndCd},
            </if>
            <if test="analysisDt != null and analysisDt != ''">
                analysis_dt = #{analysisDt},
            </if>
            <if test="analysis1 != null and analysis1 != ''">
                analysis_1 = #{analysis1},
            </if>
            <if test="analysis2 != null and analysis2 != ''">
                analysis_2 = #{analysis2},
            </if>
            <if test="analysis3 != null and analysis3 != ''">
                analysis_3 = #{analysis3},
            </if>
            <if test="analysis4 != null and analysis4 != ''">
                analysis_4 = #{analysis4},
            </if>
            <if test="bidntcenm != null and bidntcenm != ''">
                bidntcenm = #{bidntcenm},
            </if>
            <if test="refno != null and refno != ''">
                refno = #{refno},
            </if>
            <if test="bidntcedtlurl != null and bidntcedtlurl != ''">
                bidntcedtlurl = #{bidntcedtlurl},
            </if>
            <if test="analysisType != null and analysisType != ''">
                analysis_type = #{analysisType},
            </if>
            <if test="analysisWord != null and analysisWord != ''">
                analysis_word = #{analysisWord},
            </if>
            <if test="geom != null and geom != ''">
                geom = #{geom},
            </if>
            <if test="moctCd != null and moctCd != ''">
                moct_cd = #{moctCd},
            </if>
            <if test="upisCd != null and upisCd != ''">
                upis_cd = #{upisCd},
            </if>
            <if test="anaysisStartDt != null and anaysisStartDt != ''">
                anaysis_start_dt = #{anaysisStartDt},
            </if>
            <if test="anaysisEndDt != null and anaysisEndDt != ''">
                anaysis_end_dt = #{anaysisEndDt},
            </if>
            <if test="stdrDt != null and stdrDt != ''">
                stdr_dt = #{stdrDt},
            </if>
            <if test="forecastEndDt != null and forecastEndDt != ''">
                forecast_end_dt = #{forecastEndDt},
            </if>
            <if test="newGeom != null">
                new_geom = #{newGeom},
            </if>
            <if test="refKrrisUid != null and refKrrisUid != ''">
                ref_krris_uid = #{refKrrisUid},
            </if>
            <if test="attr1 != null and attr1 != ''">
                attr1 = #{attr1},
            </if>
            <if test="bidType != null and bidType != ''">
                bid_type = #{bidType},
            </if>
            <if test="attr2 != null and attr2 != ''">
                attr2 = #{attr2},
            </if>
            <if test="locPrdtReliCd != null and locPrdtReliCd != ''">
                loc_prdt_reli_cd = #{locPrdtReliCd},
            </if>
            <if test="krrisUpdYn != null and krrisUpdYn != ''">
                krris_upd_yn = #{krrisUpdYn},
            </if>
            <if test="krrisUpdDt != null and krrisUpdDt != ''">
                krris_upd_dt = #{krrisUpdDt},
            </if>
            <if test="roadType != null and roadType != ''">
                road_type = #{roadType},
            </if>
            </set>
        WHERE
             seq = #{seq}
             AND  resultno = #{resultno}
    </update>

    <delete id="deleteAnalysisInfo" parameterType="kr.or.lx.rcic.modules.analysisInfo.entity.AnalysisInfo">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.deleteAnalysisInfo */

        DELETE FROM rcic.tb_analysis_info
        WHERE
             seq = #{seq}
             AND  resultno = #{resultno}
    </delete>

    <insert id="insertAnalysisInfo">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.insertAnalysisInfo */
        INSERT INTO rcic.tb_analysis_info
        (
        seq, resultno, cnstrtsitergnnm, bidntceno, bidntceord, ntcekindnm, ntceinsttnm, bidntcedt, sido_cd, sgg_cd, emd_cd, zone_cd, road_cd, poi_cd, cbnd_cd, analysis_dt, analysis_1, analysis_2, analysis_3, analysis_4, bidntcenm, refno, bidntcedtlurl, analysis_type, analysis_word, geom, moct_cd, upis_cd, anaysis_start_dt, anaysis_end_dt, stdr_dt, forecast_end_dt, new_geom, ref_krris_uid, attr1, bid_type, attr2, loc_prdt_reli_cd, krris_upd_yn, krris_upd_dt, road_type
        )
        VALUES (
        #{seq},
        #{resultno},
        #{cnstrtsitergnnm},
        #{bidntceno},
        #{bidntceord},
        #{ntcekindnm},
        #{ntceinsttnm},
        #{bidntcedt},
        #{sidoCd},
        #{sggCd},
        #{emdCd},
        #{zoneCd},
        #{roadCd},
        #{poiCd},
        #{cbndCd},
        #{analysisDt},
        #{analysis1},
        #{analysis2},
        #{analysis3},
        #{analysis4},
        #{bidntcenm},
        #{refno},
        #{bidntcedtlurl},
        #{analysisType},
        #{analysisWord},
        #{geom},
        #{moctCd},
        #{upisCd},
        #{anaysisStartDt},
        #{anaysisEndDt},
        #{stdrDt},
        #{forecastEndDt},
        #{newGeom},
        #{refKrrisUid},
        #{attr1},
        #{bidType},
        #{attr2},
        #{locPrdtReliCd},
        #{krrisUpdYn},
        #{krrisUpdDt},
        #{roadType}
        )
	</insert>

    <select id="getAnalysisInfoFileDataCnt" resultType="int">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.getAnalysisInfoFileDataCnt */
        select count(*)
        from (
        <include refid="sqlGetFileData"/>
        ) a
    </select>

    <select id="getAnalysisInfoFileData" resultType="java.util.Map">
    /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.getAnalysisInfoFileData */
        <include refid="common.headerRow"/>
            <include refid="sqlGetFileData"/>
        <include refid="common.footerRow"/>
    </select>

    <sql id="sqlGetFileData">
        with api_info as (
            select tab.seq
                 , tab.resultno
                 , tab.sido_cd
                 , tab.sgg_cd
                 , tab.emd_cd
                 , tab.stdr_dt
                 , tab.bidntceno
                 , tab.bidntceord
                 , tab.ntcekindnm
                 , tab.ntceinsttnm
                 , tab.bidntcenm
                 , tab.bidntcedt
                 , tab.bidntcedtlurl
                 , tab.refno
                 , tab.dminsttcd
                 , tab.dminsttnm
				 , tab.ntceno
				 , tab.min_cntrctCnclsDate
				 , tab.max_cntrctCnclsDate
				 , tab.totCntrctAmt
				 , tab.thtmCntrctAmt
				 , tab.cbgnDate
				 , tab.thtmCcmpltDate
				 , tab.ttalCcmpltDate
                 , tab.forecast_st_dt
                 , tab.forecast_end_dt
                 , tab.national_highway_no     
                 , tab.const_road_clss
                 , tab.loc_accu_clss
                 , string_agg(distinct tab.road_ty_nm, ', ') as road_ty_nm
                 , string_agg(distinct tab.fac_ty_nm, ', ') as fac_ty_nm
                 , MAX(case when tab.loc_ty = '01' then wkt_geom else null end) as point_geom
                 , MAX(case when tab.loc_ty = '03' then wkt_geom else null end) as line_geom
            from
                (
                    select a.seq
                         , a.resultno
                         , a.sido_cd
                         , a.sgg_cd
                         , a.emd_cd
                         , a.stdr_dt
                         , a.bidntceno
                         , a.bidntceord
                         , a.ntcekindnm
                         , a.ntceinsttnm
                         , a.bidntcenm
                         , a.bidntcedt
                         , a.bidntcedtlurl
                         , a.refno
                         , a.dminsttcd
                         , a.dminsttnm
						 , t.ntceno
						 , t.min_cntrctCnclsDate
						 , t.max_cntrctCnclsDate
						 , t.totCntrctAmt
						 , t.thtmCntrctAmt
						 , t.cbgnDate
						 , t.thtmCcmpltDate
						 , t.ttalCcmpltDate
                         , a.forecast_st_dt
                         , a.forecast_end_dt
                         , a.national_highway_no
                         , a.const_road_clss
                         , case when a.loc_ref_dict_nm in ('tl_poi_point', 'tb_dbnd_info', 'tl_road_name', 'tl_develop_info') then '02'
                                when a.loc_ref_dict_nm in ('legaldong_sido', 'legaldong_sgg', 'legaldong_emd', 'legaldong_li') then '01'
                                when a.loc_ref_dict_nm in ('tb_cbnd_info', 'tl_srch_addr', 'tl_center_line') then '03'
                                else '99' end as loc_accu_clss
                         , b.road_ty_cd
                         , b.road_ty_nm
                         , c.fac_ty_cd
                         , c.fac_ty_nm
                         , d.loc_ty
                         , public.st_astext(d.geom) as wkt_geom
                    from rcic.tb_analysis_info a
					         left outer join (select ntceno
                                                     , MIN(cntrctCnclsDate) as min_cntrctCnclsDate   --최초계약체결일
                                                     , MAX(cntrctCnclsDate) as max_cntrctCnclsDate   --최종계약체결일
                                                     , MAX(totCntrctAmt) as totCntrctAmt             --총계약금액
                                                     , MAX(thtmCntrctAmt) as thtmCntrctAmt           --금차계약금액        
                                                     , MAX(cbgnDate) as cbgnDate                     --착공일자
                                                     , MAX(thtmCcmpltDate) as thtmCcmpltDate         --금차준공일자
                                                     , MAX(ttalCcmpltDate) as ttalCcmpltDate         --총준공일자
											    from rcic.tb_g2b_contract_info
											   group by ntceno) t on (concat(a.bidntceno, a.bidntceord) = t.ntceno)
                             left outer join rcic.tb_analysis_road_info b on (a.resultno = b.resultno)
                             left outer join rcic.tb_analysis_fac_info c on (a.resultno = c.resultno)
                             left outer join rcic.tb_analysis_loc_info d on (a.seq = d.seq)
                ) tab
            where tab.const_road_clss = #{roadClass}  -- '161' : 국도, '99' : 지방도/기타, 'B500004' : 고속도로
              -- 공고일자 조건 (시작일자가 입력되지 않고 종료일자만 있으면 오류, 시작일자만 입력되는 경우 종료일자는 99991231로 SET)
              and tab.stdr_dt between #{startDt}
              <if test="endDt not in {null, ''}">
              and #{endDt}
              </if>
              <if test="!(endDt not in {null, ''})">
              and '99991231'
              </if>
            <if test="sidoCd != null and sidoCd != ''">
              and tab.sido_cd = #{sidoCd}           -- 시도코드
            </if>
            <if test="sggCd != null and sggCd != ''">
              and tab.sgg_cd = #{sggCd}         -- 시군구코드
            </if>
            <if test="roadTyList != null">
                <foreach collection="roadTyList" item="roadTy" open="and tab.road_ty_cd in (" close=")" separator=",">#{roadTy}</foreach> -- 공사종류
            </if>
            <if test="facTyList != null">
                <foreach collection="facTyList" item="facTy" open="and tab.fac_ty_cd in (" close=")" separator=",">#{facTy}</foreach> -- 시설종류
            </if>		  
            group by tab.seq
                   , tab.resultno
                   , tab.sido_cd
                   , tab.sgg_cd
                   , tab.emd_cd
                   , tab.stdr_dt
                   , tab.bidntceno
                   , tab.bidntceord
                   , tab.ntcekindnm
                   , tab.ntceinsttnm
                   , tab.bidntcenm
                   , tab.bidntcedt
                   , tab.bidntcedtlurl
                   , tab.refno
                   , tab.dminsttcd
                   , tab.dminsttnm
				   , tab.ntceno
				   , tab.min_cntrctCnclsDate
				   , tab.max_cntrctCnclsDate
				   , tab.totCntrctAmt
				   , tab.thtmCntrctAmt
				   , tab.cbgnDate
				   , tab.thtmCcmpltDate
				   , tab.ttalCcmpltDate
                   , tab.forecast_st_dt
                   , tab.forecast_end_dt
                   , tab.national_highway_no      
                   , tab.const_road_clss
                   , tab.loc_accu_clss
        )
        select seq
             , resultno
             , sido_cd                 -- 시도코드
             , sgg_cd                  -- 시군구코드
             , emd_cd                  -- 읍면동코드
             , stdr_dt                 -- 공고일자
             , bidntceno               -- 입찰공고번호
             , bidntceord              -- 입찰공고차수
             , ntcekindnm              -- 공고종류
             , ntceinsttnm             -- 공고기관명
             , bidntcenm               -- 공고명
             , bidntcedt               -- 입찰공고일시
             , bidntcedtlurl           -- G2B입찰공고 상세 URL
             , refno                   -- 관련공고번호
             , dminsttcd               -- 수요기관코드
             , dminsttnm               -- 수요기관명
             , forecast_st_dt          -- 공사예측시작일
             , forecast_end_dt         -- 공사예측종료일
             , national_highway_no     -- 국도번호
			 , max_cntrctCnclsDate     -- 계약일자
             , thtmCntrctAmt           -- 계약금액
             , cbgnDate                -- 착공일자
             , thtmCcmpltDate          -- 준공일자
             , const_road_clss         -- 고속도로/국도/지방도 구분
             , loc_accu_clss           -- 예측위치 정확도분류
             , road_ty_nm              -- 예측된 공사종류 (콤마로 구분)
             , fac_ty_nm	           -- 예측된 시설종류 (콤마로 구분)
             , point_geom              -- 공사예측위치의 POINT
             , line_geom               -- 공사예측위치의 LINE	
             , (case when 9 * 10 <![CDATA[< ]]> count(*) over() THEN '0'
                     WHEN 9 * 10 <![CDATA[>=]]> count(*) over() THEN '1' END) AS last_page	-- 마지막페이지 판단			 
        from api_info
    </sql>
    
    
     <update id="updateLocPrdtReliCd"  parameterType="map">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.updateAnalysisInfo */

        UPDATE rcic.tb_analysis_info
        	SET
                     loc_prdt_reli_cd = '3'
              WHERE
             seq = #{seq}
             AND  resultno = #{resultno}
    </update>
    
    <select id="getAnalysisDetailCbnd" resultType="egovMap">
		select seq
			,pnu
			,addr
			,jibun
			,sub_jibun
			,stdr_dt
			,sido_cd
			,sgg_cd
			,emd_cd
			,ri_cd
	      ,public.GeometryType(geom) as geom_type
		  ,public.ST_AsGeoJSON(GEOM) as geo_geom
		from rcic.tb_cbnd_info 
		where seq = #{resultno}
	</select>
	
	<select id="getAnalysisDetailDevelop" resultType="egovMap">
		select * 
		  ,public.GeometryType(geom) as geom_type
		  ,public.ST_AsGeoJSON(GEOM) as geo_geom
		from rcic.tl_develop_info 
		where id = #{resultno}
	</select>

	<select id="getAnalysisDetailPoi" resultType="egovMap">
		select *
	      ,public.GeometryType(geom) as geom_type
		  ,public.ST_AsGeoJSON(GEOM) as geo_geom
		from rcic.tl_poi_point      /* 지명정보 */
		where seq = #{resultno}
	</select>

	<select id="getAnalysisDetailRoad" resultType="egovMap">
		select 
			alwnc_resn
			,emd_cd
			,emd_nm
			,eng_rn
			,pnu
			,rbp_cn
			,rep_cn
			,seq
			,sgg_cd
			,sgg_nm
			,sido_cd
			,sido_nm
			,geom
			,public.GeometryType(geom) as geom_type
			,public.ST_AsGeoJSON(GEOM) as geo_geom
		from rcic.tl_road_name
		where seq = #{resultno}
	</select>


	


	
	<select id="selectAnalysisInfoCntMulti" resultType="int">
        /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.selectAnalysisInfoCntMulti */

        SELECT 
        COUNT(*) 
        FROM (
        	<include refid="sqlGetFileDataMulti"/>
        ) A
        <include refid="whereConditionsMulti" />
    </select>
	<sql id="whereConditionsMulti">
        <where>
            <include refid="conditionsMulti" />
        </where>
    </sql>

    <sql id="conditionsMulti">
        <if test="seq != null">
            AND A.seq = #{seq}
        </if>
        <if test="resultno != null">
            AND A.resultno = #{resultno}
        </if>
        <if test="cnstrtsitergnnm != null and cnstrtsitergnnm != ''">
            AND A.cnstrtsitergnnm = #{cnstrtsitergnnm}
        </if>
        <if test="bidntceno != null and bidntceno != ''">
            AND A.bidntceno = #{bidntceno}
        </if>
        <if test="bidntceord != null and bidntceord != ''">
            AND A.bidntceord = #{bidntceord}
        </if>
        <if test="ntcekindnm != null and ntcekindnm != ''">
            AND A.ntcekindnm = #{ntcekindnm}
        </if>
        <if test="ntceinsttnm != null and ntceinsttnm != ''">
            AND A.ntceinsttnm = #{ntceinsttnm}
        </if>
        <if test="bidntcedt != null and bidntcedt != ''">
            AND A.bidntcedt = #{bidntcedt}
        </if>
        <if test="sidoCd != null and sidoCd != ''">
            AND A.sido_cd = #{sidoCd}
        </if>
        <if test="sggCd != null and sggCd != ''">
            AND A.sgg_cd = #{sggCd}
        </if>
        <if test="emdCd != null and emdCd != ''">
            AND A.emd_cd = #{emdCd}
        </if>
        <if test="zoneCd != null and zoneCd != ''">
            AND A.zone_cd = #{zoneCd}
        </if>
        <if test="roadCd != null and roadCd != ''">
            AND A.road_cd = #{roadCd}
        </if>
        <if test="poiCd != null and poiCd != ''">
            AND A.poi_cd = #{poiCd}
        </if>
        <if test="cbndCd != null and cbndCd != ''">
            AND A.cbnd_cd = #{cbndCd}
        </if>
        <if test="analysisDt != null and analysisDt != ''">
            AND A.analysis_dt = #{analysisDt}
        </if>
        <if test="analysis1 != null and analysis1 != ''">
            AND A.analysis_1 = #{analysis1}
        </if>
        <if test="analysis2 != null and analysis2 != ''">
            AND A.analysis_2 = #{analysis2}
        </if>
        <if test="analysis3 != null and analysis3 != ''">
            AND A.analysis_3 = #{analysis3}
        </if>
        <if test="analysis4 != null and analysis4 != ''">
            AND analysis_4 = #{analysis4}
        </if>
        <if test="bidntcenm != null and bidntcenm != ''">
            AND A.bidntcenm = #{bidntcenm}
        </if>
        <if test="refno != null and refno != ''">
            AND A.refno = #{refno}
        </if>
        <if test="bidntcedtlurl != null and bidntcedtlurl != ''">
            AND A.bidntcedtlurl = #{bidntcedtlurl}
        </if>
        <if test="analysisType != null and analysisType != ''">
            AND A.analysis_type = #{analysisType}
        </if>
        <if test="analysisWord != null and analysisWord != ''">
            AND A.analysis_word = #{analysisWord}
        </if>
        <if test="geom != null and geom != ''">
            AND A.geom = #{geom}
        </if>
        <if test="moctCd != null and moctCd != ''">
            AND A.moct_cd = #{moctCd}
        </if>
        <if test="upisCd != null and upisCd != ''">
            AND A.upis_cd = #{upisCd}
        </if>
        <if test="anaysisStartDt != null and anaysisStartDt != ''">
            AND A.anaysis_start_dt = #{anaysisStartDt}
        </if>
        <if test="anaysisEndDt != null and anaysisEndDt != ''">
            AND A.anaysis_end_dt = #{anaysisEndDt}
        </if>
        <if test="stdrDt != null and stdrDt != ''">
            AND A.stdr_dt = #{stdrDt}
        </if>
        <if test="forecastEndDt != null and forecastEndDt != ''">
            AND A.forecast_end_dt = #{forecastEndDt}
        </if>
        <if test="newGeom != null">
            AND A.new_geom = #{newGeom}
        </if>
        <if test="refKrrisUid != null and refKrrisUid != ''">
            AND A.ref_krris_uid = #{refKrrisUid}
        </if>
        <if test="attr1 != null and attr1 != ''">
            AND A.attr1 = #{attr1}
        </if>
        <if test="bidType != null and bidType != ''">
            AND A.bid_type = #{bidType}
        </if>
        <if test="attr2 != null and attr2 != ''">
            AND A.attr2 = #{attr2}
        </if>
        <if test="locPrdtReliCd != null and locPrdtReliCd != ''">
            AND A.loc_prdt_reli_cd = #{locPrdtReliCd}
        </if>
        <if test="krrisUpdYn != null and krrisUpdYn != ''">
            AND A.krris_upd_yn = #{krrisUpdYn}
        </if>
        <if test="krrisUpdDt != null and krrisUpdDt != ''">
            AND A.krris_upd_dt = #{krrisUpdDt}
        </if>
        <if test="roadType != null and roadType != ''">
            AND A.road_type = #{roadType}
        </if>
    </sql>
    
    
	
	<select id="getAnalysisInfoFileDataMulti" resultType="java.util.Map">
   	 /* kr.or.lx.rcic.modules.analysisInfo.mapper.AnalysisInfoMapper.getAnalysisInfoFileDataMulti */
        <include refid="common.headerRow"/>
            <include refid="sqlGetFileDataMulti"/>
        <include refid="common.footerRow"/>
    </select>

    <sql id="sqlGetFileDataMulti">
        with api_info as (
            select tab.seq
                 , tab.resultno
                 , tab.sido_cd
                 , tab.sgg_cd
                 , tab.emd_cd
                 , tab.stdr_dt
                 , tab.bidntceno
                 , tab.bidntceord
                 , tab.ntcekindnm
                 , tab.ntceinsttnm
                 , tab.bidntcenm
                 , tab.bidntcedt
                 , tab.bidntcedtlurl
                 , tab.refno
                 , tab.dminsttcd
                 , tab.dminsttnm
				 , tab.ntceno
				 , tab.min_cntrctCnclsDate
				 , tab.max_cntrctCnclsDate
				 , tab.totCntrctAmt
				 , tab.thtmCntrctAmt
				 , tab.cbgnDate
				 , tab.thtmCcmpltDate
				 , tab.ttalCcmpltDate
                 , tab.forecast_st_dt
                 , tab.forecast_end_dt
                 , tab.national_highway_no     
                 , tab.const_road_clss
                 , tab.loc_accu_clss
                 , string_agg(distinct tab.road_ty_nm, ', ') as road_ty_nm
                 , string_agg(distinct tab.fac_ty_nm, ', ') as fac_ty_nm
                 , MAX(case when tab.loc_ty = '01' then wkt_geom else null end) as point_geom
                 , MAX(case when tab.loc_ty = '03' then wkt_geom else null end) as line_geom
            from
                (
                    select a.seq
                         , a.resultno
                         , a.sido_cd
                         , a.sgg_cd
                         , a.emd_cd
                         , a.stdr_dt
                         , a.bidntceno
                         , a.bidntceord
                         , a.ntcekindnm
                         , a.ntceinsttnm
                         , a.bidntcenm
                         , a.bidntcedt
                         , a.bidntcedtlurl
                         , a.refno
                         , a.dminsttcd
                         , a.dminsttnm
						 , t.ntceno
						 , t.min_cntrctCnclsDate
						 , t.max_cntrctCnclsDate
						 , t.totCntrctAmt
						 , t.thtmCntrctAmt
						 , t.cbgnDate
						 , t.thtmCcmpltDate
						 , t.ttalCcmpltDate
                         , a.forecast_st_dt
                         , a.forecast_end_dt
                         , a.national_highway_no
                         , a.const_road_clss
                         , case when a.loc_ref_dict_nm in ('tl_poi_point', 'tb_dbnd_info', 'tl_road_name', 'tl_develop_info') then '02'
                                when a.loc_ref_dict_nm in ('legaldong_sido', 'legaldong_sgg', 'legaldong_emd', 'legaldong_li') then '01'
                                when a.loc_ref_dict_nm in ('tb_cbnd_info', 'tl_srch_addr', 'tl_center_line') then '03'
                                else '99' end as loc_accu_clss
                         , b.road_ty_cd
                         , b.road_ty_nm
                         , c.fac_ty_cd
                         , c.fac_ty_nm
                         , d.loc_ty
                         , public.st_astext(d.geom) as wkt_geom
                    from rcic.tb_analysis_info a
					         left outer join (select ntceno
                                                     , MIN(cntrctCnclsDate) as min_cntrctCnclsDate   --최초계약체결일
                                                     , MAX(cntrctCnclsDate) as max_cntrctCnclsDate   --최종계약체결일
                                                     , MAX(totCntrctAmt) as totCntrctAmt             --총계약금액
                                                     , MAX(thtmCntrctAmt) as thtmCntrctAmt           --금차계약금액        
                                                     , MAX(cbgnDate) as cbgnDate                     --착공일자
                                                     , MAX(thtmCcmpltDate) as thtmCcmpltDate         --금차준공일자
                                                     , MAX(ttalCcmpltDate) as ttalCcmpltDate         --총준공일자
											    from rcic.tb_g2b_contract_info
											   group by ntceno) t on (concat(a.bidntceno, a.bidntceord) = t.ntceno)
                             left outer join rcic.tb_analysis_road_info b on (a.resultno = b.resultno)
                             left outer join rcic.tb_analysis_fac_info c on (a.resultno = c.resultno)
                             left outer join rcic.tb_analysis_loc_info d on (a.seq = d.seq)
                ) tab
            where tab.const_road_clss = #{roadClass}  -- '161' : 국도, '99' : 지방도/기타, 'B500004' : 고속도로
              -- 공고일자 조건 (시작일자가 입력되지 않고 종료일자만 있으면 오류, 시작일자만 입력되는 경우 종료일자는 99991231로 SET)
              and tab.stdr_dt between #{startDt}
              <if test="endDt not in {null, ''}">
              and #{endDt}
              </if>
              <if test="!(endDt not in {null, ''})">
              and '99991231'
              </if>
            <if test="sidoCd != null and sidoCd != ''">
              and tab.sido_cd = #{sidoCd}           -- 시도코드
            </if>
            <if test="sggCd != null and sggCd != ''">
              and tab.sgg_cd = #{sggCd}         -- 시군구코드
            </if>
            <if test="roadTyList != null">
                <foreach collection="roadTyList" item="roadTy" open="and tab.road_ty_cd in (" close=")" separator=",">#{roadTy}</foreach> -- 공사종류
            </if>
            <if test="facTyList != null">
                <foreach collection="facTyList" item="facTy" open="and tab.fac_ty_cd in (" close=")" separator=",">#{facTy}</foreach> -- 시설종류
            </if>	
            group by tab.seq
                   , tab.resultno
                   , tab.sido_cd
                   , tab.sgg_cd
                   , tab.emd_cd
                   , tab.stdr_dt
                   , tab.bidntceno
                   , tab.bidntceord
                   , tab.ntcekindnm
                   , tab.ntceinsttnm
                   , tab.bidntcenm
                   , tab.bidntcedt
                   , tab.bidntcedtlurl
                   , tab.refno
                   , tab.dminsttcd
                   , tab.dminsttnm
				   , tab.ntceno
				   , tab.min_cntrctCnclsDate
				   , tab.max_cntrctCnclsDate
				   , tab.totCntrctAmt
				   , tab.thtmCntrctAmt
				   , tab.cbgnDate
				   , tab.thtmCcmpltDate
				   , tab.ttalCcmpltDate
                   , tab.forecast_st_dt
                   , tab.forecast_end_dt
                   , tab.national_highway_no      
                   , tab.const_road_clss
                   , tab.loc_accu_clss
        )
		SELECT
			  B.seq                  AS seq                
			, B.resultno             AS resultno           
			, B.sido_cd              AS sido_cd              -- 시도코드
			, B.sgg_cd               AS sgg_cd               -- 시군구코드
			, B.emd_cd               AS emd_cd               -- 읍면동코드
			, B.stdr_dt              AS stdr_dt              -- 공고일자
			, B.bidntceno            AS bidntceno            -- 입찰공고번호
			, B.bidntceord           AS bidntceord           -- 입찰공고차수
			, B.ntcekindnm           AS ntcekindnm           -- 공고종류
			, B.ntceinsttnm          AS ntceinsttnm          -- 공고기관명
			, B.bidntcenm            AS bidntcenm            -- 공고명
			, B.bidntcedt            AS bidntcedt            -- 입찰공고일시
			, B.bidntcedtlurl        AS bidntcedtlurl        -- G2B입찰공고 상세 URL
			, B.refno                AS refno                -- 관련공고번호
			, B.dminsttcd            AS dminsttcd            -- 수요기관코드
			, B.dminsttnm            AS dminsttnm            -- 수요기관명
			, B.forecast_st_dt       AS forecast_st_dt       -- 공사예측시작일
			, B.forecast_end_dt      AS forecast_end_dt      -- 공사예측종료일
			, B.national_highway_no  AS national_highway_no  -- 국도번호
			, B.max_cntrctCnclsDate  AS max_cntrctCnclsDate  -- 계약일자
			, B.thtmCntrctAmt        AS thtmCntrctAmt        -- 계약금액
			, B.cbgnDate             AS cbgnDate             -- 착공일자
			, B.thtmCcmpltDate       AS thtmCcmpltDate       -- 준공일자
			, B.const_road_clss      AS const_road_clss      -- 고속도로/국도/지방도 구분
			, B.loc_accu_clss        AS loc_accu_clss        -- 예측위치 정확도분류
			, B.road_ty_nm           AS road_ty_nm           -- 예측된 공사종류 (콤마로 구분)
			, B.fac_ty_nm	         AS fac_ty_nm	         -- 예측된 시설종류 (콤마로 구분)
			, B.point_geom           AS point_geom           -- 공사예측위치의 POINT
			, B.line_geom            AS line_geom            -- 공사예측위치의 LINE
			, B.last_page	         AS last_page	         -- 마지막페이지 판단
				
		FROM
		(		
			SELECT *
			FROM (
				SELECT
					*
					, row_number() over (partition by resultno) as row
				FROM RCIC.tb_analysis_score
			) a
			WHERE a.row <![CDATA[ > ]]> 1
		) A
		INNER JOIN(		
			  select seq
		             , resultno
		             , sido_cd                 -- 시도코드
		             , sgg_cd                  -- 시군구코드
		             , emd_cd                  -- 읍면동코드
		             , stdr_dt                 -- 공고일자
		             , bidntceno               -- 입찰공고번호
		             , bidntceord              -- 입찰공고차수
		             , ntcekindnm              -- 공고종류
		             , ntceinsttnm             -- 공고기관명
		             , bidntcenm               -- 공고명
		             , bidntcedt               -- 입찰공고일시
		             , bidntcedtlurl           -- G2B입찰공고 상세 URL
		             , refno                   -- 관련공고번호
		             , dminsttcd               -- 수요기관코드
		             , dminsttnm               -- 수요기관명
		             , forecast_st_dt          -- 공사예측시작일
		             , forecast_end_dt         -- 공사예측종료일
		             , national_highway_no     -- 국도번호
					 , max_cntrctCnclsDate     -- 계약일자
		             , thtmCntrctAmt           -- 계약금액
		             , cbgnDate                -- 착공일자
		             , thtmCcmpltDate          -- 준공일자
		             , const_road_clss         -- 고속도로/국도/지방도 구분
		             , loc_accu_clss           -- 예측위치 정확도분류
		             , road_ty_nm              -- 예측된 공사종류 (콤마로 구분)
		             , fac_ty_nm	           -- 예측된 시설종류 (콤마로 구분)
		             , point_geom              -- 공사예측위치의 POINT
		             , line_geom               -- 공사예측위치의 LINE	
		             , (case when 9 * 10 <![CDATA[< ]]> count(*) over() THEN '0'
		                     WHEN 9 * 10 <![CDATA[>=]]> count(*) over() THEN '1' END) AS last_page	-- 마지막페이지 판단				 
		        from api_info	
		) B		
		ON A.RESULTNO = B.RESULTNO
    </sql>
    
    
  	<select id="selectRoadLayerList" resultType="egovMap" parameterType="String">
		select 
			* 
		from 
			rcic.tl_road_layer 
		where 
			lay_nm in(select fac_ty_nm from rcic.tb_analysis_fac_info where resultno = #{resultno})
	</select>
	
	<select id="selectRoadInfoList" resultType="egovMap" parameterType="String">
		select
		   distinct y.road_no, 
		   y.sect
		from
		(
			select 
				a.geom
			from 
				rcic.tb_legaldong_sgg a
				,(select geom from rcic.tb_analysis_loc_info where loc_ty = '01' and seq = (select seq from rcic.tb_analysis_info where resultno = #{resultno} order by analysis_dt desc limit 1)) b
			where 
				public.st_within(public.st_transform(b.geom, 3857), public.st_transform(a.geom, 3857))
		) x
		,(	
			select 
				geom, road_no, sect 
			from
				rcic.n3a_a0010000 
		) y
		where 
			public.st_intersects(public.st_transform(y.geom, 3857), public.st_transform(x.geom, 3857))
	</select>
	
	<select id="selectRoadInfoHistList" resultType="egovMap" parameterType="String">
		select
		   distinct y.road_no, y.sect
		from
		(
			select 
				a.geom
			from 
				rcic.tb_legaldong_sgg a
				,(select geom from rcic.tb_analysis_loc_hist where loc_ty = '01' and seq = (select seq from rcic.tb_analysis_info where resultno = #{resultno}) order by ser_no desc limit 1) b
			where 
				public.st_within(public.st_transform(b.geom, 3857), public.st_transform(a.geom, 3857))
		) x
		,(	
			select 
				geom, road_no, sect 
			from
				rcic.n3a_a0010000 
		) y
		where 
			public.st_intersects(public.st_transform(y.geom, 3857), public.st_transform(x.geom, 3857))
	</select>
	
	<select id="getlocChangeCnt" resultType="int">
		select 
			count(*)
		from 
			rcic.tb_analysis_score 
		where 
			resultno = #{resultno} 
			and 
			locchange_yn = 'Y'
	</select>
	
	<select id="getRoadLayerImg" resultType="egovMap" parameterType="String">
		select 
			code_nm, base64_attr2 as img
		from 
			rcic.tb_sys_cmm_code_dtl
		where 
			code_nm = #{layNm} and base64_attr2 is not null and base64_attr2 != '' limit 1
	</select>
    
    <select id="selectRoadLayerDataFlag" resultType="egovMap">
		/* 도로대장 49종 krris api 데이터 조회 */
        select 
        	* 
        from 
        	rcic.tl_krris_api_data_flag 
        where 
			road_no = #{roadNo} 
			and
			sect = #{sect} 
			and
			lay_nm = #{layNm}
    </select>
    
    <select id="selectRoadLayerDataList" resultType="egovMap">
		/* 도로대장 49종 krris api 데이터 조회 */
        select 
        	* 
        from 
        	rcic.tl_krris_api_data 
        where 
        	road_no = #{roadNo} 
			and
			sect = #{sect} 
			and
			lay_nm = #{layNm} 
    </select>

    <insert id="insertCalsDataToRcic" parameterType='egovMap'>
        INSERT INTO rcic.tl_bmng_info
        (
        req_dt
        ,req_type
        ,prmsn_no
        ,prmsn_dt
        ,mngr_nm
        ,state_cd
        ,road_type
        ,road_nm
        ,ocpy_loc
        ,ocpy_area
        ,ocpy_pos
        ,ocpy_dur
        ,work_st_dt
        ,work_en_dt
        ,ocpy_per_info
        ,insert_log
        )
        VALUES

            (
                #{REQ_DT}
                ,#{REQ_TYPE}
                ,#{PRMSN_NO}
                ,#{PRMSN_DT}
                ,#{MNGR_NM}
                ,#{STATE_CD}
                ,#{ROAD_TYPE}
                ,#{ROAD_NM}
                ,#{OCPY_LOC}
                ,#{OCPY_AREA}
                ,#{OCPY_POS}
                ,#{OCPY_DUR}
                ,#{WORK_ST_DT}
                ,#{WORK_EN_DT}
                ,#{OCPY_PER_INFO}
                ,to_char(now(), 'yyyy/mm/dd hh24:mi:ss')


            )

    </insert>
</mapper>
