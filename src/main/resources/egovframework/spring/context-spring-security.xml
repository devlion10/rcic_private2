<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:s="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
                        http://www.springframework.org/schema/security
                        http://www.springframework.org/schema/security/spring-security-4.1.xsd">
	<!-- spring-security 상세설정 -->
	
		<s:http pattern="/assets/**" security="none" />
		<s:http pattern="/css/**" security="none" />
		<s:http pattern="/images/**" security="none" />
		<s:http pattern="/js/**" security="none" />
	
		<s:http auto-config="true"  use-expressions="true"  >
		
		<!-- 인증 접근 제한을 Handle 할때 사용 -->
		<!-- entry-point-ref="authenticationEntryPoint -->
		
		<!--  인증된 사용자와 관련된 모든 세션을 추적 -->
		<s:custom-filter ref="sessionManagementFilter" before="SESSION_MANAGEMENT_FILTER" />
		<!-- spring-security 허용 페이지 설정 -->
		
		<s:intercept-url pattern="/**" access="permitAll" /> 
		<!-- 업무시스템 끝 -->
		<!-- spring-security 로그인/처리/실패 페이지설정 -->
		<s:form-login login-page="/rcic/public_main"
			login-processing-url="/rcic/login/loginProc"
			authentication-success-handler-ref="authenticationSuccessHandler"
		    authentication-failure-handler-ref="authenticationFailureHandler"
			username-parameter="userId" password-parameter="password" />  
			 
		 <!-- access-denied-handler 재정의 -->
		 <!--  entry-point-ref="authenticationEntryPoint 를 설정할때 ref로 handler를 재정의 한다. -->
		<s:access-denied-handler error-page="/error/access-denied" /> 
		<!-- <s:access-denied-handler ref="acessDeniedHandler" /> -->
		
		<s:logout logout-url="/rcic/login/logout" invalidate-session="true" delete-cookies="JSESSIONID" logout-success-url="/rcic/public_main" />
		
		<s:session-management invalid-session-url="/main">
			<s:concurrency-control max-sessions="1" error-if-maximum-exceeded="true" />
		</s:session-management>

		<!-- csrf 크로스브라우징 방어 -->
		<s:csrf disabled="true" />
		<s:headers>
			<s:frame-options policy="SAMEORIGIN" />
		</s:headers>
	</s:http>	 
	
	<!-- 권한 없는 요청일 경우 --> 
	<bean id="acessDeniedHandler" class="kr.or.lx.rcic.frmwrk.util.AccessDeniedHandlerImpl"> 
		<property name="redirect" value="false" /> 
		<property name="errorPage" value="/error/access-denied" /> 
	</bean>
	
	<!-- 인증전 일 경우 -->
    <bean id="authenticationEntryPoint" class="kr.or.lx.rcic.frmwrk.util.AuthenticationEntryPointImpl">
        <property name="redirect" value="false" />
        <property name="errorPage" value="/error/access-denied" />
    </bean>
    
	
	<s:authentication-manager id="authenticationManager">
		<s:authentication-provider ref="AuthenticationProvider" />
	</s:authentication-manager>

	<!-- 로그인 성공 시 페이지 설정 -->
	<bean id="authenticationSuccessHandler"
		class="kr.or.lx.rcic.frmwrk.userUtil.UserAuthenticationSuccessHandler">
		<property name="defaultTargetUrl" value="/rcic/public_main" />
	</bean>

	<bean id="authenticationFailureHandler" class="kr.or.lx.rcic.frmwrk.userUtil.UserAuthenticationFailureHandler">
	</bean>

	<!-- User Service -->
	<bean id="userDatailService" class="kr.or.lx.rcic.frmwrk.user.service.impl.UserDatailServiceImpl" />
	
	<!-- Sha256 -->
	<bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder">
		<constructor-arg name="strength" value="256"></constructor-arg>
	</bean>
	
	<!-- 인증 체크 -->
	<bean id="AuthenticationProvider" class="kr.or.lx.rcic.frmwrk.user.service.impl.UserAuthenticationProvider">
		<property name="userService" ref="userDatailService" />
	</bean>
	<bean id="userService" class="kr.or.lx.rcic.frmwrk.user.service.impl.UserServiceImpl" />
	 
	<bean id="sessionManagementFilter" class="org.springframework.security.web.session.SessionManagementFilter">
        <constructor-arg name="securityContextRepository" ref="org.springframework.security.web.context.HttpSessionSecurityContextRepository#0" />
        <property name="invalidSessionStrategy" ref="ajaxInvalidSessionStrategy" />
    </bean>
    <bean id="ajaxInvalidSessionStrategy" class="kr.or.lx.rcic.frmwrk.AjaxInvalidSessionStrategy"></bean>
</beans>
